name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: tmux-layout

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tmux-layout
            asset_name: tmux-layout-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: tmux-layout
            asset_name: tmux-layout-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tmux-layout
            asset_name: tmux-layout-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: tmux-layout
            asset_name: tmux-layout-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools for Linux ARM64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}

      - name: Prepare binary
        shell: bash
        run: |
          mkdir -p release
          cp "target/${{ matrix.target }}/release/${{ matrix.artifact_name }}" "release/${{ matrix.asset_name }}"
          chmod +x "release/${{ matrix.asset_name }}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/${{ matrix.asset_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
